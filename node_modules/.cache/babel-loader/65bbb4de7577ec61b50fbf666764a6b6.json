{"ast":null,"code":"var _jsxFileName = \"/Users/Varun/Data/Workspace/The career path/React/heavy-data-rendering/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let boxElement;\n  const [data, setData] = useState([]);\n  const [current, setCurrent] = useState(40);\n  useEffect(() => {\n    fetch(\"./Rule.json\").then(response => response.json()).then(json => json.data).then(item => setData(item.filter((i, index) => index < current))).catch(e => console.log(e));\n  }, [current]);\n\n  function deleteRow(id) {\n    setData(data.filter(item => item.id !== id));\n  }\n\n  function cloneRow(id) {\n    data.push(data.filter(item => item.id === id));\n    setData([...data]);\n  }\n\n  function moveUp(i) {\n    const object = data[i - 1];\n    data[i - 1] = data[i];\n    data[i] = object;\n    setData([...data]);\n  }\n\n  function moveDown(i) {\n    const object = data[i + 1];\n    data[i + 1] = data[i];\n    data[i] = object;\n    setData([...data]);\n  }\n\n  function createObserver() {\n    let observer;\n    let options = {\n      root: null,\n      rootMargin: \"0px\",\n      threshold: 0.5\n    };\n    observer = new IntersectionObserver(handleIntersect, options);\n    observer.observe(boxElement);\n  }\n\n  function handleIntersect(entries, observer) {\n    setCurrent(current + 20);\n  }\n\n  window.addEventListener(\"load\", e => {\n    boxElement = document.querySelector(\".content\");\n    createObserver();\n  }, false);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Rule Id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Rule Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Clone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Down\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), data.map((entry, index) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: entry.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: entry.ruleName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./delete.png\",\n            alt: \"delete\",\n            onClick: () => deleteRow(entry.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./clone.png\",\n            alt: \"clone\",\n            onClick: () => cloneRow(entry.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./moveup.png\",\n            alt: \"moveup\",\n            onClick: () => moveUp(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./movedown.png\",\n            alt: \"movedown\",\n            onClick: () => moveDown(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, entry.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xM8m1vX5VgiFcwu06v6xis3W9Qc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Varun/Data/Workspace/The career path/React/heavy-data-rendering/src/App.js"],"names":["useEffect","useState","App","boxElement","data","setData","current","setCurrent","fetch","then","response","json","item","filter","i","index","catch","e","console","log","deleteRow","id","cloneRow","push","moveUp","object","moveDown","createObserver","observer","options","root","rootMargin","threshold","IntersectionObserver","handleIntersect","observe","entries","window","addEventListener","document","querySelector","map","entry","ruleName"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  let boxElement;\n  const [data, setData] = useState([]);\n  const [current, setCurrent] = useState(40);\n\n  useEffect(() => {\n    fetch(\"./Rule.json\")\n      .then((response) => response.json())\n      .then((json) => json.data)\n      .then((item) => setData(item.filter((i, index) => index < current)))\n      .catch((e) => console.log(e));\n  }, [current]);\n\n  function deleteRow(id) {\n    setData(data.filter((item) => item.id !== id));\n  }\n\n  function cloneRow(id) {\n    data.push(data.filter((item) => item.id === id));\n    setData([...data]);\n  }\n\n  function moveUp(i) {\n    const object = data[i - 1];\n    data[i - 1] = data[i];\n    data[i] = object;\n    setData([...data]);\n  }\n\n  function moveDown(i) {\n    const object = data[i + 1];\n    data[i + 1] = data[i];\n    data[i] = object;\n    setData([...data]);\n  }\n\n  function createObserver() {\n    let observer;\n\n    let options = {\n      root: null,\n      rootMargin: \"0px\",\n      threshold: 0.5,\n    };\n\n    observer = new IntersectionObserver(handleIntersect, options);\n    observer.observe(boxElement);\n  }\n\n  function handleIntersect(entries, observer) {\n    setCurrent(current + 20);\n  }\n\n  window.addEventListener(\n    \"load\",\n    (e) => {\n      boxElement = document.querySelector(\".content\");\n      createObserver();\n    },\n    false\n  );\n\n  return (\n    <table className=\"content\">\n      <tr className=\"row\">\n        <th>Rule Id</th>\n        <th>Rule Name</th>\n        <th>Delete</th>\n        <th>Clone</th>\n        <th>Up</th>\n        <th>Down</th>\n      </tr>\n      {data.map((entry, index) => {\n        return (\n          <tr key={entry.id} className=\"row\">\n            <td>{entry.id}</td>\n            <td>{entry.ruleName}</td>\n            <td>\n              <img\n                src=\"./delete.png\"\n                alt=\"delete\"\n                onClick={() => deleteRow(entry.id)}\n              />\n            </td>\n            <td>\n              <img\n                src=\"./clone.png\"\n                alt=\"clone\"\n                onClick={() => cloneRow(entry.id)}\n              />\n            </td>\n            <td>\n              <img\n                src=\"./moveup.png\"\n                alt=\"moveup\"\n                onClick={() => moveUp(index)}\n              />\n            </td>\n            <td>\n              <img\n                src=\"./movedown.png\"\n                alt=\"movedown\"\n                onClick={() => moveDown(index)}\n              />\n            </td>\n          </tr>\n        );\n      })}\n    </table>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}