{"ast":null,"code":"var _jsxFileName = \"/Users/Varun/Data/Workspace/The career path/React/heavy-data-rendering/src/App1.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App1() {\n  _s();\n\n  const [currentData, setCurrentData] = useState(data);\n  const [data, setData] = useState([...data, ...currentData]);\n  const [count, setCount] = useState({\n    prev: 0,\n    current: 40\n  });\n\n  const handleScroll = () => {\n    let lastTr = document.querySelector(\".content > tr:last-child\");\n    console.log(lastTr.offsetTop);\n    console.log(lastTr.clientHeight);\n    console.log(window.pageYOffset);\n    console.log(window.innerHeight);\n    let lastTrOffset = lastTr.offsetTop + lastTr.clientHeight;\n    let pageOffset = window.pageYOffset + window.innerHeight;\n\n    if (pageOffset > lastTrOffset) {\n      console.log(\"coming here\");\n      loadMore();\n    }\n  };\n\n  const loadMore = () => {\n    setCount({\n      prev: count.prev + 40,\n      current: count.current + 40\n    });\n  };\n\n  const loadUser = () => {\n    console.log(count.prev + \"   \" + count.current);\n    fetch(\"./Rule.json\").then(response => response.json()).then(json => json.data).then(item => setCurrentData(item.filter((i, index) => index >= count.prev && index < count.current)));\n  };\n\n  useEffect(() => {\n    loadUser();\n    window.addEventListener(\"scroll\", e => {\n      handleScroll(e);\n    });\n  }, []);\n  useEffect(() => {\n    loadUser();\n  }, [count]);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Rule Id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Rule Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), data.map((entry, index) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: entry.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: entry.ruleName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, entry.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App1, \"+64EtpQ/esXWZXTd9pn35V0kRqA=\");\n\n_c = App1;\nexport default App1;\n\nvar _c;\n\n$RefreshReg$(_c, \"App1\");","map":{"version":3,"sources":["/Users/Varun/Data/Workspace/The career path/React/heavy-data-rendering/src/App1.js"],"names":["useEffect","useState","App1","currentData","setCurrentData","data","setData","count","setCount","prev","current","handleScroll","lastTr","document","querySelector","console","log","offsetTop","clientHeight","window","pageYOffset","innerHeight","lastTrOffset","pageOffset","loadMore","loadUser","fetch","then","response","json","item","filter","i","index","addEventListener","e","map","entry","id","ruleName"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nfunction App1() {\n  const [currentData, setCurrentData] = useState(data);\n  const [data, setData] = useState([...data, ...currentData]);\n  const [count, setCount] = useState({ prev: 0, current: 40 });\n\n  const handleScroll = () => {\n    let lastTr = document.querySelector(\".content > tr:last-child\");\n    console.log(lastTr.offsetTop);\n    console.log(lastTr.clientHeight);\n    console.log(window.pageYOffset);\n    console.log(window.innerHeight);\n    let lastTrOffset = lastTr.offsetTop + lastTr.clientHeight;\n    let pageOffset = window.pageYOffset + window.innerHeight;\n    if (pageOffset > lastTrOffset) {\n      console.log(\"coming here\");\n      loadMore();\n    }\n  };\n\n  const loadMore = () => {\n    setCount({ prev: count.prev + 40, current: count.current + 40 });\n  };\n\n  const loadUser = () => {\n    console.log(count.prev + \"   \" + count.current);\n    fetch(\"./Rule.json\")\n      .then((response) => response.json())\n      .then((json) => json.data)\n      .then((item) =>\n        setCurrentData(\n          item.filter(\n            (i, index) => index >= count.prev && index < count.current\n          )\n        )\n      );\n  };\n\n  useEffect(() => {\n    loadUser();\n    window.addEventListener(\"scroll\", (e) => {\n      handleScroll(e);\n    });\n  }, []);\n\n  useEffect(() => {\n    loadUser();\n  }, [count]);\n\n  return (\n    <table className=\"content\">\n      <tr className=\"row\">\n        <th>Rule Id</th>\n        <th>Rule Name</th>\n      </tr>\n      {data.map((entry, index) => {\n        return (\n          <tr key={entry.id} className=\"row\">\n            <td>{entry.id}</td>\n            <td>{entry.ruleName}</td>\n          </tr>\n        );\n      })}\n    </table>\n  );\n}\n\nexport default App1;\n"]},"metadata":{},"sourceType":"module"}