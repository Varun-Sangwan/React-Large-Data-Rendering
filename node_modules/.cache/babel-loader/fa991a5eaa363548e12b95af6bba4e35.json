{"ast":null,"code":"var _jsxFileName = \"/Users/Varun/Data/Workspace/The career path/React/heavy-data-rendering/src/App1.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App1() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [current, setCurrent] = useState(40);\n  useEffect(() => {\n    fetch(\"./Rule.json\").then(response => response.json()).then(json => json.data).then(item => setData(item.filter((i, index) => index < current))).catch(e => console.log(e));\n  }, [current]);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Rule Id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Rule Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), data.map((entry, index) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: entry.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: entry.ruleName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, entry.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App1, \"xM8m1vX5VgiFcwu06v6xis3W9Qc=\");\n\n_c = App1;\nexport default App1;\n\nvar _c;\n\n$RefreshReg$(_c, \"App1\");","map":{"version":3,"sources":["/Users/Varun/Data/Workspace/The career path/React/heavy-data-rendering/src/App1.js"],"names":["useEffect","useState","App1","data","setData","current","setCurrent","fetch","then","response","json","item","filter","i","index","catch","e","console","log","map","entry","id","ruleName"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,WAAP;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CAAC,aAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESE,IAAD,IAAUA,IAAI,CAACP,IAFvB,EAGGK,IAHH,CAGSG,IAAD,IAAUP,OAAO,CAACO,IAAI,CAACC,MAAL,CAAY,CAACC,CAAD,EAAIC,KAAJ,KAAcA,KAAK,GAAGT,OAAlC,CAAD,CAHzB,EAIGU,KAJH,CAIUC,CAAD,IAAOC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAJhB;AAKD,GANQ,EAMN,CAACX,OAAD,CANM,CAAT;AAQA,sBACE;AAAO,IAAA,SAAS,EAAC,SAAjB;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAKGF,IAAI,CAACgB,GAAL,CAAS,CAACC,KAAD,EAAQN,KAAR,KAAkB;AAC1B,0BACE;AAAmB,QAAA,SAAS,EAAC,KAA7B;AAAA,gCACE;AAAA,oBAAKM,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKD,KAAK,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAASF,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPA,CALH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA5BQnB,I;;KAAAA,I;AA8BT,eAAeA,IAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nfunction App1() {\n  const [data, setData] = useState([]);\n  const [current, setCurrent] = useState(40);\n\n  useEffect(() => {\n    fetch(\"./Rule.json\")\n      .then((response) => response.json())\n      .then((json) => json.data)\n      .then((item) => setData(item.filter((i, index) => index < current)))\n      .catch((e) => console.log(e));\n  }, [current]);\n\n  return (\n    <table className=\"content\">\n      <tr className=\"row\">\n        <th>Rule Id</th>\n        <th>Rule Name</th>\n      </tr>\n      {data.map((entry, index) => {\n        return (\n          <tr key={entry.id} className=\"row\">\n            <td>{entry.id}</td>\n            <td>{entry.ruleName}</td>\n          </tr>\n        );\n      })}\n    </table>\n  );\n}\n\nexport default App1;\n"]},"metadata":{},"sourceType":"module"}